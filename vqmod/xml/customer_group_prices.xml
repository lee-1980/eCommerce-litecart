<?xml version="1.0" encoding="UTF-8"?><modification>  <id>Customer Group Prices</id>  <version>2.1.1</version>  <vqmver required="true">2.4.0</vqmver>  <author>tim-international.net</author>  <file name="admin/catalog.app/edit_product.inc.php">    <operation error="log">      <search position="after"><![CDATA[      if (empty($_POST['images'])) $_POST['images'] = array();      ]]></search>      <add><![CDATA[      if (empty($_POST['customer_group_prices'])) $_POST['customer_group_prices'] = array();      ]]></add>    </operation>    <operation error="log">      <search position="after" index="1"><![CDATA[    'prices',      ]]></search>      <add><![CDATA[    'customer_group_prices',      ]]></add>    </operation>    <operation error="log">      <search position="before"><![CDATA[        <h2><?php echo language::translate('title_campaigns', 'Campaigns'); ?></h2>      ]]></search>      <add><![CDATA[<style>#customer-group-prices td:not(:last-child){  width: 320px;}</style>        <h2><?php echo language::translate('title_customer_group_prices', 'Customer Group Prices'); ?></h2>       <div class="row">          <div class="form-group col-md-2" >            <div class="checkbox">              <label><?php echo functions::form_draw_checkbox('no_customer_group_prices', '1', true); ?> <?php echo language::translate('title_no_customer_group_prices', 'No customer Group Prices'); ?></label>            </div>          </div>           </div>        <table id="customer-group-prices" class="table table-striped data-table">          <thead>                      <tr>               <td colspan="5"><a class="add" href="#" title="<?php echo htmlspecialchars(language::translate('title_add', 'Add')); ?>"><?php echo functions::draw_fonticon('fa-plus-circle', 'style="color: #66cc66;"'); ?></a>               <a class="delete" style="margin-left: 20px;" href="#" title="<?php echo htmlspecialchars(language::translate('title_delete', 'Delete')); ?>"><?php echo functions::draw_fonticon('fa-trash-o', 'style="color: #ff6e6e;"'); ?></a>               <a class="hide_show" style="margin-left: 20px;" href="#" title="<?php echo htmlspecialchars(language::translate('title_toggle', 'Toggle')); ?>"><?php echo functions::draw_fonticon('fa-eye-slash', 'style="color: #6d6ff7;"'); ?></a>               <a class="delete_all" style="margin-left: 80px;" href="#" title="<?php echo htmlspecialchars(language::translate('title_delete', 'Delete')); ?>"><?php echo functions::draw_fonticon('fa-times-circle fa-lg', 'style="color: #ff6e6e;"'); ?></a>               </td>            </tr>                      </thead>          <thead>                  <tr>            <th style="width: 10px;"></th>              <th style="width: 320px;"><?php echo language::translate('title_customer_group', 'Customer Group'); ?></th>              <th style="width: 220px; display: none;"><?php echo language::translate('title_start_date', 'Start Date'); ?></th>              <th style="width: 220px; display: none;"><?php echo language::translate('title_end_date', 'End Date'); ?></th>              <th style="width: 320px;"><?php echo settings::get('store_currency_code'); ?></th>              <?php foreach (array_keys(currency::$currencies) as $currency_code) { if ($currency_code == settings::get('store_currency_code')) continue; ?>                            <?php } ?>              <th></th>            </tr>                      </thead>             <tbody>                        <?php if (!empty($_POST['customer_group_prices'])) foreach (array_keys($_POST['customer_group_prices']) as $key) { ?>            <tr>                            <td style="width: 10px; padding: 15px;"><a class="remove" href="#" title="<?php echo htmlspecialchars(language::translate('title_remove', 'Remove')); ?>"><?php echo functions::draw_fonticon('fa-times-circle fa-lg', 'style="color: #ff6e6e;"'); ?></a></td>              <td><?php echo functions::form_draw_hidden_field('customer_group_prices['.$key.'][id]', true) . functions::form_draw_customer_groups_list('customer_group_prices['.$key.'][customer_group_id]', true); ?></td>              <td style="display: none;">                <?php echo functions::form_draw_datetime_field('customer_group_prices['.$key.'][start_date]', true); ?>              </td>              <td style="display: none;">                <?php echo functions::form_draw_datetime_field('customer_group_prices['.$key.'][end_date]', true); ?>              </td>              <?php foreach (array_keys(currency::$currencies) as $currency_code) { if (empty($currency_code == settings::get('store_currency_code'))) continue; ?>              <td><?php echo functions::form_draw_currency_field($currency_code, 'customer_group_prices['.$key.']['. $currency_code. ']', isset($_POST['customer_group_prices'][$key][$currency_code]) ? number_format($_POST['customer_group_prices'][$key][$currency_code], 4, '.', '') : '', 'data-size="small"'); ?></td>              <?php foreach (array_keys(currency::$currencies) as $currency_code) { if (!empty($currency_code == settings::get('store_currency_code'))) continue; ?>              <td style="display: none;"><?php echo functions::form_draw_currency_field($currency_code, 'customer_group_prices['.$key.']['. $currency_code. ']', isset($_POST['customer_group_prices'][$key][$currency_code]) ? number_format($_POST['customer_group_prices'][$key][$currency_code], 4, '.', '') : '', 'data-size="small"'); ?></td>              <?php } ?>              <?php } ?>            </tr>            <?php } ?>                      </tbody>         <tfoot>         </tfoot>        </table><div class="pull-right">	<?php		echo functions::form_draw_button('save_stay', language::translate('title_save_stay', 'Save & Stay'), 'submit', '', 'save');		echo PHP_EOL;		echo functions::form_draw_button('save', language::translate('title_save_exit', 'Save & Exit'), 'submit', '', 'save');		echo PHP_EOL;	?></div><style>* {  box-sizing: border-box;}/* Create four equal columns that floats next to each other */.column {  float: left;  width: 25%;  padding: 10px;  height: 300px; /* Should be removed. Only for demonstration */}/* Clear floats after the columns */.row:after {  content: "";  display: table;  clear: both;}</style><h2>Reset Prices</h2><div class="row">  <div class="column" style="width: 320px;">        <label><?php echo language::translate('title_reset_guest_price', 'Reset Guest Price'); ?></label></br></br>         <?php echo functions::form_draw_currency_field(settings::get('store_currency_code'), 'reset_guest_price_prices['. settings::get('store_currency_code') .']', true); ?>              </br>            <div class="checkbox">              <label><?php echo functions::form_draw_checkbox('sign_in', '1', true); ?> <?php echo language::translate('title_sign_in', 'Sign In'); ?></label>            </div>            <div class="checkbox">              <label><?php echo functions::form_draw_checkbox('guest_insaneprice', '1', true); ?> <?php echo language::translate('title_guest_insaneprice', 'Guest Insane Price'); ?></label>            </div>                        <div class="checkbox">              <label><?php echo functions::form_draw_checkbox('specialprice', '1', true); ?> <?php echo language::translate('title_specialprice', 'Special Price'); ?></label>            </div>                             <div class="checkbox" >              <label><?php echo functions::form_draw_checkbox('master_guest_special_price', '1', true); ?> <?php echo language::translate('master_guest_special_price', 'Master Guest Special Price'); ?></label>            </div>                  <h3><?php echo language::translate('title_continuously', 'Continuously'); ?></h3>             <div class="checkbox" >              <label><?php echo functions::form_draw_checkbox('disable_master_guest_special_price', '1', true); ?> <?php echo language::translate('disable_master_guest_special_price', 'Disable Master Guest Special Price'); ?></label>            </div>            </div>    <div class="column" style="width: 320px;">        <label><?php echo language::translate('title_reset_default_price', 'Reset Customer Price'); ?></label></br></br>          <?php echo functions::form_draw_currency_field(settings::get('store_currency_code'), 'reset_default_price_prices['. settings::get('store_currency_code') .']', true); ?>        </br>            <div class="checkbox">              <label><?php echo functions::form_draw_checkbox('customer_insaneprice', '1', true); ?> <?php echo language::translate('title_customer_insaneprice', 'Customer Insane Price'); ?></label>            </div>            <div class="checkbox">              <label><?php echo functions::form_draw_checkbox('customer_specialprice', '1', true); ?> <?php echo language::translate('title_customer_specialprice', 'Customer Special Price'); ?></label>            </div>                       <div class="checkbox" >              <label><?php echo functions::form_draw_checkbox('master_customer_special_price', '1', true); ?> <?php echo language::translate('master_customer_special_price', 'Master Customer Special Price'); ?></label>            </div>            </br>           </br>                   <h3><?php echo language::translate('title_continuously', 'Continuously'); ?></h3>                <div class="checkbox" >              <label><?php echo functions::form_draw_checkbox('disable_master_customer_special_price', '1', true); ?> <?php echo language::translate('disable_master_customer_special_price', 'Disable Master Customer Special Price'); ?></label>            </div>                     </div>    <div class="column" style="width: 320px;">        <label><?php echo language::translate('title_reset_wholesale_price', 'Reset Wholesale Price'); ?></label></br></br>          <?php echo functions::form_draw_currency_field(settings::get('store_currency_code'), 'reset_wholesale_price_prices['. settings::get('store_currency_code') .']', true); ?>        </br>            <div class="checkbox">              <label><?php echo functions::form_draw_checkbox('wholesale_soldout', '1', true); ?> <?php echo language::translate('title_wholesale_soldout', 'Wholesale Sold Out'); ?></label>            </div>            <div class="checkbox">              <label><?php echo functions::form_draw_checkbox('wholesale_specialprice', '1', true); ?> <?php echo language::translate('title_wholesale_specialprice', 'Wholesale Special Price'); ?></label>            </div>                      <div class="checkbox" >              <label><?php echo functions::form_draw_checkbox('master_wholesale_special_price', '1', true); ?> <?php echo language::translate('master_wholesale_special_price', 'Master Wholesale Special Price'); ?></label>            </div>           </br>           </br>                  <h3><?php echo language::translate('title_disable', 'Disable'); ?></h3>                     <div class="checkbox">              <label><?php echo functions::form_draw_checkbox('disable_wholesale_soldout', '1', true); ?> <?php echo language::translate('title_disable_wholesale_soldout', 'Disable Wholesale Sold Out'); ?></label>            </div>                              <div class="checkbox" >              <label><?php echo functions::form_draw_checkbox('disable_master_wholesale_special_price', '1', true); ?> <?php echo language::translate('disable_master_wholesale_special_price', 'Disable Master Wholesale Special Price'); ?></label>            </div>              </div>           <div class="column" style="width: 320px;">    <label><?php echo language::translate('title_reset_vip_price', 'Reset VIP Price'); ?></label></br></br>    <?php echo functions::form_draw_currency_field(settings::get('store_currency_code'), 'reset_fake_sold_out_date_price_prices['. settings::get('store_currency_code') .']', true); ?>     </br>             <div class="checkbox">              <label><?php echo functions::form_draw_checkbox('vip', '1', true); ?> <?php echo language::translate('title_vip', 'V.I.P'); ?></label>            </div>                                       <div class="checkbox">              <label><?php echo functions::form_draw_checkbox('fake_sold_out', '1', true); ?> <?php echo language::translate('title_fake_sold_out', 'Fake Sold Out'); ?></label>            </div>                </div></div></br><script>  $('body').on('keyup change', 'input[name^="customer_group_prices"][name$="[<?php echo settings::get('store_currency_code'); ?>]"]', function() {    var parent = $(this).closest('tr');    var percentage = ($('input[name="prices[<?php echo settings::get('store_currency_code'); ?>]"]').val() - $(this).val()) / $('input[name="prices[<?php echo settings::get('store_currency_code'); ?>]"]').val() * 100;    percentage = Number(percentage).toFixed(2);    $(parent).find('input[name$="[percentage]"]').val(percentage);    <?php foreach (currency::$currencies as $currency) { ?>    var value = 0;    value = $(parent).find('input[name^="customer_group_prices"][name$="[<?php echo settings::get('store_currency_code'); ?>]"]').val() * <?php echo $currency['value']; ?>;    value = Number(value).toFixed(<?php echo $currency['decimals']; ?>);    $(parent).find('input[name^="customer_group_prices"][name$="[<?php echo $currency['code']; ?>]"]').attr('placeholder', value);    if ($(parent).find('input[name^="customer_group_prices"][name$="[<?php echo $currency['code']; ?>]"]').val() == 0) {      $(parent).find('input[name^="customer_group_prices"][name$="[<?php echo $currency['code']; ?>]"]').val('');    }    <?php } ?>  });  $('input[name^="customer_group_prices"][name$="[<?php echo settings::get('store_currency_code'); ?>]"]').trigger('keyup');   $('body').on('change', 'select[name^="customer_group_prices"][name$="[customer_group_id]"]', function() {        if(parseInt($(this).find("option:selected").attr('value')) === 999){           var parent = $(this).closest('tr');           $(parent).find('input[name^="customer_group_prices"][name$="[<?php echo settings::get('store_currency_code'); ?>]"]').val($('input[name="purchase_price"]').value);           $(parent).find('input[name^="customer_group_prices"][name$="[<?php echo settings::get('store_currency_code'); ?>]"]').trigger('keyup');        }   });$('#customer-group-prices').on('click', '.remove', function(e) {    e.preventDefault();    $(this).closest('tr').remove();  });    $('#customer-group-prices').on('click', '.delete_all', function(e) {    e.preventDefault();    $('#customer-group-prices tbody tr').remove();  });    $('#customer-group-prices').on('click', '.delete', function(e) {    e.preventDefault();    $('#customer-group-prices tbody input[name^="customer_group_prices"]').attr('value','');    $('#customer-group-prices tbody select[name^="customer_group_prices"]==1').prop('selectedIndex', 0).selectmenu('refresh', true);;  });    $('#customer-group-prices').on('click', '.hide_show', function(e) {    e.preventDefault();    $('#customer-group-prices tbody tr').toggle();});<!-- $('#customer-group-prices tbody tr').toggle(); -->  var new_customer_group_price_i = 1;  $('#customer-group-prices').on('click', '.add', function(e) {    e.preventDefault();    var output = '<tr>'               + '<td class="text-right" style="width: 10px; padding: 15px;"><a class="remove" href="#" title="<?php echo htmlspecialchars(language::translate('title_remove', 'Remove')); ?>"><?php echo functions::draw_fonticon('fa-times-circle fa-lg', 'style="color: #ff6e6e;"'); ?></a></td>'               + '<td ><?php echo functions::general_escape_js(functions::form_draw_hidden_field('customer_group_prices[new_customer_group_price_i][id]', '') . functions::form_draw_customer_groups_list('customer_group_prices[new_customer_group_price_i][customer_group_id]', '1')); ?></td>'               + '<td style="display: none;"><?php echo functions::general_escape_js(functions::form_draw_datetime_field('customer_group_prices[new_customer_group_price_i][start_date]', true, '', 'customer_group_1')); ?></td>'               + '<td style="display: none;"><?php echo functions::general_escape_js(functions::form_draw_datetime_field('customer_group_prices[new_customer_group_price_i][end_date]', true, '', 'customer_group_1')); ?></td>'                  <?php foreach (array_keys(currency::$currencies) as $currency_code) { if (empty($currency_code == settings::get('store_currency_code'))) continue; ?>               + '<td><?php echo functions::general_escape_js(functions::form_draw_currency_field($currency_code, 'customer_group_prices[new_customer_group_price_i]['. $currency_code .']', '', 'data-size="small"')); ?></td>'                  <?php foreach (array_keys(currency::$currencies) as $currency_code) { if (!empty($currency_code == settings::get('store_currency_code'))) continue; ?>               + '<td style="display: none;"><?php echo functions::general_escape_js(functions::form_draw_currency_field($currency_code, 'customer_group_prices[new_customer_group_price_i]['. $currency_code .']', '', 'data-size="small"')); ?></td>'               <?php } ?>               <?php } ?>               + '</tr>';   while ($('input[name="customer_group_prices[new_'+new_customer_group_price_i+']"]').length) new_customer_group_price_i++;    output = output.replace(/new_customer_group_price_i/g, 'new_' + new_customer_group_price_i);    $('#customer-group-prices tbody').append(output);    new_customer_group_price_i++;  });      var new_customer_group_price_i = 2;  $('#customer-group-prices').on('click', '.add', function(e) {    e.preventDefault();    var output = '<tr>'               + '<td class="text-right" style="width: 10px; padding: 15px;"><a class="remove" href="#" title="<?php echo htmlspecialchars(language::translate('title_remove', 'Remove')); ?>"><?php echo functions::draw_fonticon('fa-times-circle fa-lg', 'style="color: #ff6e6e;"'); ?></a></td>'               + '<td><?php echo functions::general_escape_js(functions::form_draw_hidden_field('customer_group_prices[new_customer_group_price_i][id]', '') . functions::form_draw_customer_groups_list('customer_group_prices[new_customer_group_price_i][customer_group_id]', '2')); ?></td>'               + '<td style="display: none;"><?php echo functions::general_escape_js(functions::form_draw_datetime_field('customer_group_prices[new_customer_group_price_i][start_date]', true, '', 'customer_group_2')); ?></td>'               + '<td style="display: none;"><?php echo functions::general_escape_js(functions::form_draw_datetime_field('customer_group_prices[new_customer_group_price_i][end_date]', true, '', 'customer_group_2')); ?></td>'                  <?php foreach (array_keys(currency::$currencies) as $currency_code) { if (empty($currency_code == settings::get('store_currency_code'))) continue; ?>               + '<td><?php echo functions::general_escape_js(functions::form_draw_currency_field($currency_code, 'customer_group_prices[new_customer_group_price_i]['. $currency_code .']', '', 'data-size="small"')); ?></td>'                  <?php foreach (array_keys(currency::$currencies) as $currency_code) { if (!empty($currency_code == settings::get('store_currency_code'))) continue; ?>               + '<td style="display: none;"><?php echo functions::general_escape_js(functions::form_draw_currency_field($currency_code, 'customer_group_prices[new_customer_group_price_i]['. $currency_code .']', '', 'data-size="small"')); ?></td>'               <?php } ?>               <?php } ?>               + '</tr>';   while ($('input[name="customer_group_prices[new_'+new_customer_group_price_i+']"]').length) new_customer_group_price_i++;    output = output.replace(/new_customer_group_price_i/g, 'new_' + new_customer_group_price_i);    $('#customer-group-prices tbody').append(output);    new_customer_group_price_i++;  });      var new_customer_group_price_i = 3;  $('#customer-group-prices').on('click', '.add', function(e) {    e.preventDefault();    var output = '<tr>'               + '<td class="text-right" style="width: 10px; padding: 15px;"><a class="remove" href="#" title="<?php echo htmlspecialchars(language::translate('title_remove', 'Remove')); ?>"><?php echo functions::draw_fonticon('fa-times-circle fa-lg', 'style="color: #ff6e6e;"'); ?></a></td>'               + '<td><?php echo functions::general_escape_js(functions::form_draw_hidden_field('customer_group_prices[new_customer_group_price_i][id]', '') . functions::form_draw_customer_groups_list('customer_group_prices[new_customer_group_price_i][customer_group_id]', '3')); ?></td>'               + '<td style="display: none;"><?php echo functions::general_escape_js(functions::form_draw_datetime_field('customer_group_prices[new_customer_group_price_i][start_date]', true, '', 'customer_group_3')); ?></td>'               + '<td style="display: none;"><?php echo functions::general_escape_js(functions::form_draw_datetime_field('customer_group_prices[new_customer_group_price_i][end_date]', true, '', 'customer_group_3')); ?></td>'                  <?php foreach (array_keys(currency::$currencies) as $currency_code) { if (empty($currency_code == settings::get('store_currency_code'))) continue; ?>               + '<td><?php echo functions::general_escape_js(functions::form_draw_currency_field($currency_code, 'customer_group_prices[new_customer_group_price_i]['. $currency_code .']', '', 'data-size="small"')); ?></td>'                  <?php foreach (array_keys(currency::$currencies) as $currency_code) { if (!empty($currency_code == settings::get('store_currency_code'))) continue; ?>               + '<td style="display: none;"><?php echo functions::general_escape_js(functions::form_draw_currency_field($currency_code, 'customer_group_prices[new_customer_group_price_i]['. $currency_code .']', '', 'data-size="small"')); ?></td>'               <?php } ?>               <?php } ?>               + '</tr>';   while ($('input[name="customer_group_prices[new_'+new_customer_group_price_i+']"]').length) new_customer_group_price_i++;    output = output.replace(/new_customer_group_price_i/g, 'new_' + new_customer_group_price_i);    $('#customer-group-prices tbody').append(output);    new_customer_group_price_i++;  });      var new_customer_group_price_i = 4;  $('#customer-group-prices').on('click', '.add', function(e) {    e.preventDefault();    var output = '<tr>'               + '<td class="text-right" style="width: 10px; padding: 15px;"><a class="remove" href="#" title="<?php echo htmlspecialchars(language::translate('title_remove', 'Remove')); ?>"><?php echo functions::draw_fonticon('fa-times-circle fa-lg', 'style="color: #ff6e6e;"'); ?></a></td>'               + '<td style="display: none;"><?php echo functions::general_escape_js(functions::form_draw_currency_field($currency_code, 'customer_group_prices[new_customer_group_price_i]['. $currency_code .']', '', 'data-size="small"')); ?></td>'               + '<td><?php echo functions::general_escape_js(functions::form_draw_hidden_field('customer_group_prices[new_customer_group_price_i][id]', '') . functions::form_draw_customer_groups_list('customer_group_prices[new_customer_group_price_i][customer_group_id]', '4')); ?></td>'               + '<td style="display: none;"><?php echo functions::general_escape_js(functions::form_draw_datetime_field('customer_group_prices[new_customer_group_price_i][start_date]', true, '', 'customer_group_4')); ?></td>'               + '<td style="display: none;"><?php echo functions::general_escape_js(functions::form_draw_datetime_field('customer_group_prices[new_customer_group_price_i][end_date]', true, '', 'customer_group_4')); ?></td>'                  <?php foreach (array_keys(currency::$currencies) as $currency_code) { if (empty($currency_code == settings::get('store_currency_code'))) continue; ?>               + '<td><?php echo functions::general_escape_js(functions::form_draw_currency_field($currency_code, 'customer_group_prices[new_customer_group_price_i]['. $currency_code .']', '', 'data-size="small"')); ?></td>'                  <?php foreach (array_keys(currency::$currencies) as $currency_code) { if (!empty($currency_code == settings::get('store_currency_code'))) continue; ?>               <?php } ?>               <?php } ?>               + '</tr>';   while ($('input[name="customer_group_prices[new_'+new_customer_group_price_i+']"]').length) new_customer_group_price_i++;    output = output.replace(/new_customer_group_price_i/g, 'new_' + new_customer_group_price_i);    $('#customer-group-prices tbody').append(output);    new_customer_group_price_i++;  });      var new_customer_group_price_i = 5;  $('#customer-group-prices').on('click', '.add', function(e) {    e.preventDefault();    var output = '<tr>'               + '<td class="text-right" style="width: 10px; padding: 15px;"><a class="remove" href="#" title="<?php echo htmlspecialchars(language::translate('title_remove', 'Remove')); ?>"><?php echo functions::draw_fonticon('fa-times-circle fa-lg', 'style="color: #ff6e6e;"'); ?></a></td>'               + '<td><?php echo functions::general_escape_js(functions::form_draw_hidden_field('customer_group_prices[new_customer_group_price_i][id]', '') . functions::form_draw_customer_groups_list('customer_group_prices[new_customer_group_price_i][customer_group_id]', '5')); ?></td>'               + '<td style="display: none;"><?php echo functions::general_escape_js(functions::form_draw_datetime_field('customer_group_prices[new_customer_group_price_i][start_date]', true, '', 'customer_group_5')); ?></td>'               + '<td style="display: none;"><?php echo functions::general_escape_js(functions::form_draw_datetime_field('customer_group_prices[new_customer_group_price_i][end_date]', true, '', 'customer_group_5')); ?></td>'                  <?php foreach (array_keys(currency::$currencies) as $currency_code) { if (empty($currency_code == settings::get('store_currency_code'))) continue; ?>               + '<td><?php echo functions::general_escape_js(functions::form_draw_currency_field($currency_code, 'customer_group_prices[new_customer_group_price_i]['. $currency_code .']', '', 'data-size="small"')); ?></td>'                  <?php foreach (array_keys(currency::$currencies) as $currency_code) { if (!empty($currency_code == settings::get('store_currency_code'))) continue; ?>               + '<td style="display: none;"><?php echo functions::general_escape_js(functions::form_draw_currency_field($currency_code, 'customer_group_prices[new_customer_group_price_i]['. $currency_code .']', '', 'data-size="small"')); ?></td>'               <?php } ?>               <?php } ?>               + '</tr>';   while ($('input[name="customer_group_prices[new_'+new_customer_group_price_i+']"]').length) new_customer_group_price_i++;    output = output.replace(/new_customer_group_price_i/g, 'new_' + new_customer_group_price_i);    $('#customer-group-prices tbody').append(output);    new_customer_group_price_i++;  });    var new_customer_group_price_i = 6;  $('#customer-group-prices').on('click', '.add', function(e) {    e.preventDefault();    var output = '<tr>'               + '<td class="text-right" style="width: 10px; padding: 15px;"><a class="remove" href="#" title="<?php echo htmlspecialchars(language::translate('title_remove', 'Remove')); ?>"><?php echo functions::draw_fonticon('fa-times-circle fa-lg', 'style="color: #ff6e6e;"'); ?></a></td>'               + '<td><?php echo functions::general_escape_js(functions::form_draw_hidden_field('customer_group_prices[new_customer_group_price_i][id]', '') . functions::form_draw_customer_groups_list('customer_group_prices[new_customer_group_price_i][customer_group_id]', '6')); ?></td>'               + '<td style="display: none;"><?php echo functions::general_escape_js(functions::form_draw_datetime_field('customer_group_prices[new_customer_group_price_i][start_date]', true, '', 'customer_group_6')); ?></td>'               + '<td style="display: none;"><?php echo functions::general_escape_js(functions::form_draw_datetime_field('customer_group_prices[new_customer_group_price_i][end_date]', true, '', 'customer_group_6')); ?></td>'                  <?php foreach (array_keys(currency::$currencies) as $currency_code) { if (empty($currency_code == settings::get('store_currency_code'))) continue; ?>               + '<td><?php echo functions::general_escape_js(functions::form_draw_currency_field($currency_code, 'customer_group_prices[new_customer_group_price_i]['. $currency_code .']', '', 'data-size="small"')); ?></td>'                  <?php foreach (array_keys(currency::$currencies) as $currency_code) { if (!empty($currency_code == settings::get('store_currency_code'))) continue; ?>               + '<td style="display: none;"><?php echo functions::general_escape_js(functions::form_draw_currency_field($currency_code, 'customer_group_prices[new_customer_group_price_i]['. $currency_code .']', '', 'data-size="small"')); ?></td>'               <?php } ?>               <?php } ?>               + '</tr>';   while ($('input[name="customer_group_prices[new_'+new_customer_group_price_i+']"]').length) new_customer_group_price_i++;    output = output.replace(/new_customer_group_price_i/g, 'new_' + new_customer_group_price_i);    $('#customer-group-prices tbody').append(output);    new_customer_group_price_i++;  });  $('')    var new_customer_group_price_i = 1;  $('#customer-group-prices').on('click', '.add', function(e) {    e.preventDefault();    var output = '<tr>'               + '<td class="text-right" style="width: 10px; padding: 15px;"><a class="remove" href="#" title="<?php echo htmlspecialchars(language::translate('title_remove', 'Remove')); ?>"><?php echo functions::draw_fonticon('fa-times-circle fa-lg', 'style="color: #ff6e6e;"'); ?></a></td>'               + '<td><?php echo functions::general_escape_js(functions::form_draw_hidden_field('customer_group_prices[new_customer_group_price_i][id]', '') . functions::form_draw_customer_groups_list('customer_group_prices[new_customer_group_price_i][customer_group_id]', '999')); ?></td>'               + '<td style="display: none;"><?php echo functions::general_escape_js(functions::form_draw_datetime_field('customer_group_prices[new_customer_group_price_i][start_date]', true, '', 'customer_group_999')); ?></td>'               + '<td style="display: none;"><?php echo functions::general_escape_js(functions::form_draw_datetime_field('customer_group_prices[new_customer_group_price_i][end_date]', true, '', 'customer_group_999')); ?></td>'                  <?php foreach (array_keys(currency::$currencies) as $currency_code) { if (empty($currency_code == settings::get('store_currency_code'))) continue; ?>               + '<td><?php echo functions::general_escape_js(functions::form_draw_currency_field($currency_code, 'customer_group_prices[new_customer_group_price_i]['. $currency_code .']', '', 'data-size="small"')); ?></td>'                  <?php foreach (array_keys(currency::$currencies) as $currency_code) { if (!empty($currency_code == settings::get('store_currency_code'))) continue; ?>               + '<td style="display: none;"><?php echo functions::general_escape_js(functions::form_draw_currency_field($currency_code, 'customer_group_prices[new_customer_group_price_i]['. $currency_code .']', '', 'data-size="small"')); ?></td>'               <?php } ?>               <?php } ?>               + '</tr>';   while ($('input[name="customer_group_prices[new_'+new_customer_group_price_i+']"]').length) new_customer_group_price_i++;    output = output.replace(/new_customer_group_price_i/g, 'new_' + new_customer_group_price_i);    $('#customer-group-prices tbody').append(output);    new_customer_group_price_i++;  });  $('')    </script>      ]]></add>    </operation>  </file>  <file name="includes/entities/ent_currency.inc.php">    <operation error="log">      <search position="after" offset="1"><![CDATA[            throw new Exception('Cannot rename the store currency.');      ]]></search>      <add><![CDATA[            database::query(              "alter table ". DB_TABLE_PRODUCTS_PRICES_BY_CUSTOMER_GROUP ."              change `". database::input($currency['code']) ."` `". database::input($this->data['code']) ."` decimal(11, 4) not null;"            );      ]]></add>    </operation>    <operation error="log">      <search position="after" offset="1"><![CDATA[        $this->data['id'] = database::insert_id();      ]]></search>      <add><![CDATA[      $products_prices_query = database::query(        "show fields from ". DB_TABLE_PRODUCTS_PRICES_BY_CUSTOMER_GROUP ."        where `Field` = '". database::input($this->data['code']) ."';"      );      if (database::num_rows($products_prices_query) == 0) {        database::query(          "alter table ". DB_TABLE_PRODUCTS_PRICES_BY_CUSTOMER_GROUP ."          add `". database::input($this->data['code']) ."` decimal(11, 4) not null;"        );      }      ]]></add>    </operation>  </file>  <file name="includes/entities/ent_product.inc.php">    <operation error="log">      <search position="after"><![CDATA[      $this->data['prices'] = array();      ]]></search>      <add><![CDATA[      $this->data['customer_group_prices'] = array();      ]]></add>    </operation>    <operation error="log">      <search position="before" offset="1"><![CDATA[      $product_campaigns_query = database::query(      ]]></search>      <add><![CDATA[      $product_customer_group_prices_query = database::query(        "select * from ". DB_TABLE_PRODUCTS_PRICES_BY_CUSTOMER_GROUP ."        where product_id = '". (int)$this->data['id'] ."'        order by customer_group_id;"      );      while ($customer_group_price = database::fetch($product_customer_group_prices_query)) {        $this->data['customer_group_prices'][$customer_group_price['id']] = $customer_group_price;      }      ]]></add>    </operation>    <operation error="log">      <search position="after" offset="5"><![CDATA[          "update ". DB_TABLE_PRODUCTS_PRICES ." set      ]]></search>      <add><![CDATA[      database::query(        "delete from ". DB_TABLE_PRODUCTS_PRICES_BY_CUSTOMER_GROUP ."        where product_id = '". (int)$this->data['id'] ."'        and id not in ('". @implode("', '", @array_keys($this->data['customer_group_prices'])) ."');"      );      if (!empty($this->data['customer_group_prices'])) {        foreach (array_keys($this->data['customer_group_prices']) as $key) {          if (empty($this->data['customer_group_prices'][$key]['id'])) {            database::query(              "insert into ". DB_TABLE_PRODUCTS_PRICES_BY_CUSTOMER_GROUP ."              (product_id)              values ('". (int)$this->data['id'] ."');"            );            $this->data['customer_group_prices'][$key]['id'] = database::insert_id();          }          $sql_currency_customer_group_prices = "";          foreach (array_keys(currency::$currencies) as $currency_code) {            $sql_currency_customer_group_prices .= $currency_code ." = '". (float)$this->data['customer_group_prices'][$key][$currency_code] ."', ";          }          $sql_currency_customer_group_prices = rtrim($sql_currency_customer_group_prices, ', ');          database::query(            "update ". DB_TABLE_PRODUCTS_PRICES_BY_CUSTOMER_GROUP ." set            customer_group_id = ". (int)$this->data['customer_group_prices'][$key]['customer_group_id'] .",            start_date = ". (empty($this->data['customer_group_prices'][$key]['start_date']) ? "NULL" : "'". date('Y-m-d H:i:s', strtotime($this->data['customer_group_prices'][$key]['start_date'])) ."'") .",            end_date = ". (empty($this->data['customer_group_prices'][$key]['end_date']) ? "NULL" : "'". date('Y-m-d H:i:s', strtotime($this->data['customer_group_prices'][$key]['end_date'])) ."'") .",            $sql_currency_customer_group_prices            where product_id = '". (int)$this->data['id'] ."'            and id = '". (int)$this->data['customer_group_prices'][$key]['id'] ."'            limit 1;"          );        }      }      ]]></add>    </operation>    <operation error="log">      <search position="after" offset="2"><![CDATA[        "delete from ". DB_TABLE_PRODUCTS_PRICES ."      ]]></search>      <add><![CDATA[      database::query(        "delete from ". DB_TABLE_PRODUCTS_PRICES_BY_CUSTOMER_GROUP ."        where product_id = '". (int)$this->data['id'] ."';"      );      ]]></add>    </operation>  </file>  <file name="includes/functions/func_catalog.inc.php">    <operation error="log">      <search position="replace"><![CDATA[pp.price, ]]></search>      <add><![CDATA[pp.price, ppbcg.customer_group_price, ]]></add>    </operation>    <operation error="log">      <search position="after"><![CDATA[      ) pp on (pp.product_id = p.id)      ]]></search>      <add><![CDATA[      left join (        select product_id, if(`". database::input(currency::$selected['code']) ."`, `". database::input(currency::$selected['code']) ."` / ". (float)currency::$selected['value'] .", `". database::input(settings::get('store_currency_code')) ."`) as customer_group_price        from ". DB_TABLE_PRODUCTS_PRICES_BY_CUSTOMER_GROUP ."        where (customer_group_id = ". (int)customer::$data['customer_group_id'] .")        and (start_date <= '". date('Y-m-d H:i:s') ."')        and (year(end_date) < '1971' or end_date >= '". date('Y-m-d H:i:s') ."')        order by end_date asc      ) ppbcg on (ppbcg.product_id = p.id)      ]]></add>    </operation>  </file>  <file name="pages/search.inc.php">    <operation error="log">      <search position="replace"><![CDATA[pp.price, ]]></search>      <add><![CDATA[pp.price, ppbcg.customer_group_price, ]]></add>    </operation>    <operation error="log">      <search position="after"><![CDATA[      ) pp on (pp.product_id = p.id)      ]]></search>      <add><![CDATA[      left join (        select product_id, if(`". database::input(currency::$selected['code']) ."`, `". database::input(currency::$selected['code']) ."` / ". (float)currency::$selected['value'] .", `". database::input(settings::get('store_currency_code')) ."`) as customer_group_price        from ". DB_TABLE_PRODUCTS_PRICES_BY_CUSTOMER_GROUP ."        where (customer_group_id = ". (int)customer::$data['customer_group_id'] .")        and (start_date <= '". date('Y-m-d H:i:s') ."')        and (year(end_date) < '1971' or end_date >= '". date('Y-m-d H:i:s') ."')        order by end_date asc      ) ppbcg on (ppbcg.product_id = p.id)      ]]></add>    </operation>  </file>  <file name="includes/functions/func_draw.inc.php">		<operation error="log">			<search position="before"><![CDATA[    return $listing_product->stitch('views/listing_product_'.$listing_type);      ]]></search>			<add><![CDATA[			    if (!isset(reference::product($product['id'])->no_customer_group_prices) && (isset($product['customer_group_price']) && (float)$product['customer_group_price'] > 0)) {      $listing_product->snippets['regular_price'] = tax::get_price($product['customer_group_price'], $product['tax_class_id']);    }      ]]></add>		</operation>				<operation error="log">			<search position="before"><![CDATA[    return $listing_product->stitch('views/listing_product_'.$listing_type);      ]]></search>			<add><![CDATA[			    if (!isset($product['master_insane_deal_price'])  && (isset($product['campaign_price']))) {      $listing_product->snippets['regular_price'] = tax::get_price($product['campaign']['price'], $product['tax_class_id']);    }        else if (!isset($product['disable_master_insane_deal_price']) && (isset($product['campaign_price']))) {      $listing_product->snippets['regular_price'] = tax::get_price($product['campaign']['price'], $product['tax_class_id']);    }           ]]></add>		</operation>		  </file>  <file name="includes/references/ref_customer.inc.php">    <operation error="log">      <search position="after"><![CDATA[            'id',      ]]></search>      <add><![CDATA[            'customer_group_id',      ]]></add>    </operation>  </file>  <file name="includes/references/ref_product.inc.php">          <operation error="log">      <search position="before"><![CDATA[            case 'price':      ]]></search>      <add><![CDATA[        case 'original_price': // Taken from the original 'price'          $this->_data['price'] = 0;          $products_prices_query = database::query(            "select * from ". DB_TABLE_PRODUCTS_PRICES ."            where product_id = ". (int)$this->_id ."            limit 1;"          );          $product_price = database::fetch($products_prices_query);          if ($product_price[$this->_currency_code] != 0) {            $this->_data['original_price'] = currency::convert($product_price[$this->_currency_code], $this->_currency_code, settings::get('store_currency_code'));          } else {            $this->_data['original_price'] = $product_price[settings::get('store_currency_code')];          }          break;                  case 'stock_quantity_prices': // Taken from the original 'stock_quantity_prices'          $this->_data['stock_quantity_prices'] = 0;          $products_prices_query = database::query(            "select * from ". DB_TABLE_PRODUCTS_STOCK_QUANTITY_PRICES ."            where product_id = ". (int)$this->_id ."            limit 1;"          );          $product_price = database::fetch($products_prices_query);          if ($product_price[$this->_currency_code] != 0) {            $this->_data['stock_quantity_prices'] = currency::convert($product_price[$this->_currency_code], $this->_currency_code, settings::get('store_currency_code'));          } else {            $this->_data['stock_quantity_prices'] = $product_price[settings::get('store_currency_code')];          }          break;                                case 'stock_quantity_guest_prices': // Taken from the original 'stock_quantity_guest_prices'          $this->_data['stock_quantity_guest_prices'] = 0;          $products_prices_query = database::query(            "select * from ". DB_TABLE_PRODUCTS_STOCK_QUANTITY_GUEST_PRICES ."            where product_id = ". (int)$this->_id ."            limit 1;"          );          $product_price = database::fetch($products_prices_query);          if ($product_price[$this->_currency_code] != 0) {            $this->_data['stock_quantity_guest_prices'] = currency::convert($product_price[$this->_currency_code], $this->_currency_code, settings::get('store_currency_code'));          } else {            $this->_data['stock_quantity_guest_prices'] = $product_price[settings::get('store_currency_code')];          }          break;                               case 'default_price_price': // Taken from the original 'default_price_price'          $this->_data['default_price_price'] = 0;            $product_default_price_price_query = database::query(                "select * from ". DB_TABLE_PRODUCTS_PRICES_BY_DEFAULT_PRICE ."                  where product_id = ". (int)$this->_id ."                  and (year(start_date) < '1971' or start_date <= '". date('Y-m-d H:i:s') ."')                  and (year(end_date) < '1971' or end_date >= '". date('Y-m-d H:i:s') ."')                  order by id desc                  limit 1;"            );          $default_price_price = database::fetch($product_default_price_price_query);          if ($default_price_price[$this->_currency_code] != 0) {            $this->_data['default_price_price'] = currency::convert($default_price_price[$this->_currency_code], $this->_currency_code, settings::get('store_currency_code'));          } else {            $this->_data['default_price_price'] = $default_price_price[settings::get('store_currency_code')];          }          break;         case 'fake_sold_out_date_price_prices': // Taken from the original 'fake_sold_out_date_price_prices'          $this->_data['fake_sold_out_date_price_prices'] = 0;            $product_fake_sold_out_date_price_prices_query = database::query(                "select * from ". DB_TABLE_PRODUCTS_PRICES_BY_FAKE_SOLD_OUT_DATE_PRICE ."                  where product_id = ". (int)$this->_id ."                  and (year(start_date) < '1971' or start_date <= '". date('Y-m-d H:i:s') ."')                  and (year(end_date) < '1971' or end_date >= '". date('Y-m-d H:i:s') ."')                  order by id desc                  limit 1;"            );          $fake_sold_out_date_price_prices = database::fetch($product_fake_sold_out_date_price_prices_query);          if ($fake_sold_out_date_price_price[$this->_currency_code] != 0) {            $this->_data['fake_sold_out_date_price_prices'] = currency::convert($fake_sold_out_date_price_prices[$this->_currency_code], $this->_currency_code, settings::get('store_currency_code'));          } else {            $this->_data['fake_sold_out_date_price_prices'] = $fake_sold_out_date_price_prices[settings::get('store_currency_code')];          }          break;         case 'sign_in_date_price_prices': // Taken from the original 'sign_in_date_price_prices'          $this->_data['sign_in_date_price_prices'] = 0;            $product_sign_in_date_price_prices_query = database::query(                "select * from ". DB_TABLE_PRODUCTS_PRICES_BY_SIGN_IN_DATE_PRICE ."                  where product_id = ". (int)$this->_id ."                  and (year(start_date) < '1971' or start_date <= '". date('Y-m-d H:i:s') ."')                  and (year(end_date) < '1971' or end_date >= '". date('Y-m-d H:i:s') ."')                  order by id desc                  limit 1;"            );          $sign_in_date_price_prices = database::fetch($product_sign_in_date_price_prices_query);          if ($sign_in_date_price_price[$this->_currency_code] != 0) {            $this->_data['sign_in_date_price_prices'] = currency::convert($sign_in_date_price_prices[$this->_currency_code], $this->_currency_code, settings::get('store_currency_code'));          } else {            $this->_data['sign_in_date_price_prices'] = $sign_in_date_price_prices[settings::get('store_currency_code')];          }          break;                                       case 'guest_price_prices': // Taken from the original 'guest_price_prices'          $this->_data['guest_price_prices'] = 0;            $product_guest_price_prices_query = database::query(                "select * from ". DB_TABLE_PRODUCTS_PRICES_BY_GUEST_PRICE ."                  where product_id = ". (int)$this->_id ."                  and (year(start_date) < '1971' or start_date <= '". date('Y-m-d H:i:s') ."')                  and (year(end_date) < '1971' or end_date >= '". date('Y-m-d H:i:s') ."')                  order by id desc                  limit 1;"            );          $guest_price_prices = database::fetch($product_guest_price_prices_query);          if ($guest_price_price[$this->_currency_code] != 0) {            $this->_data['guest_price_prices'] = currency::convert($guest_price_prices[$this->_currency_code], $this->_currency_code, settings::get('store_currency_code'));          } else {            $this->_data['guest_price_prices'] = $guest_price_prices[settings::get('store_currency_code')];          }          break;                   case 'vip_price_prices': // Taken from the original 'vip_price_prices'          $this->_data['vip_price_prices'] = 0;            $product_vip_price_prices_query = database::query(                "select * from ". DB_TABLE_PRODUCTS_PRICES_BY_VIP_PRICE ."                  where product_id = ". (int)$this->_id ."                  and (year(start_date) < '1971' or start_date <= '". date('Y-m-d H:i:s') ."')                  and (year(end_date) < '1971' or end_date >= '". date('Y-m-d H:i:s') ."')                  order by id desc                  limit 1;"            );          $vip_price_prices = database::fetch($product_vip_price_prices_query);          if ($vip_price_price[$this->_currency_code] != 0) {            $this->_data['vip_price_prices'] = currency::convert($vip_price_prices[$this->_currency_code], $this->_currency_code, settings::get('store_currency_code'));          } else {            $this->_data['vip_price_prices'] = $vip_price_prices[settings::get('store_currency_code')];          }          break;                                      case 'wholesale_price_prices': // Taken from the original 'wholesale_price_prices'          $this->_data['wholesale_price_prices'] = 0;            $product_wholesale_price_prices_query = database::query(                "select * from ". DB_TABLE_PRODUCTS_PRICES_BY_WHOLESALE_PRICE ."                  where product_id = ". (int)$this->_id ."                  and (year(start_date) < '1971' or start_date <= '". date('Y-m-d H:i:s') ."')                  and (year(end_date) < '1971' or end_date >= '". date('Y-m-d H:i:s') ."')                  order by id desc                  limit 1;"            );          $wholesale_price_prices = database::fetch($product_wholesale_price_prices_query);          if ($wholesale_price_price[$this->_currency_code] != 0) {            $this->_data['wholesale_price_prices'] = currency::convert($wholesale_price_prices[$this->_currency_code], $this->_currency_code, settings::get('store_currency_code'));          } else {            $this->_data['wholesale_price_prices'] = $wholesale_price_prices[settings::get('store_currency_code')];          }          break;                                        case 'customer_group_prices': // Taken from the original 'customer_group_prices'          $this->_data['customer_group_prices'] != 0;            $product_customer_group_prices_query = database::query(                "select * from ". DB_TABLE_PRODUCTS_PRICES_BY_CUSTOMER_GROUP ."                  where product_id = ". (int)$this->_id ."                  and (year(start_date) < '1971' or start_date <= '". date('Y-m-d H:i:s') ."')                  and (year(end_date) < '1971' or end_date >= '". date('Y-m-d H:i:s') ."')                  order by id desc                  limit 1;"            );          $customer_group_prices = database::fetch($product_customer_group_prices_query);          if ($customer_group_prices[$this->_currency_code] != 0) {            $this->_data['customer_group_prices'] = currency::convert($customer_group_prices[$this->_currency_code], $this->_currency_code, settings::get('store_currency_code'));          } else {            $this->_data['customer_group_prices'] = $customer_group_prices[settings::get('store_currency_code')];          }          break;                ]]></add>    </operation>                       <operation error="log">      <search position="before" offset="2"><![CDATA[            case 'quantity_unit':      ]]></search>      <add><![CDATA[                if (!empty($this->_customer_id) && (empty(customer::$data['code'])) && empty($this->_data['campaign']['price']) && (empty(reference::product($this->_id)->no_customer_group_prices))) {        if (!empty(reference::customer($this->_customer_id)->customer_group_id)) {                $product_customer_group_prices_query = database::query(                  "select * from ". DB_TABLE_PRODUCTS_PRICES_BY_CUSTOMER_GROUP ."                  where product_id = ". (int)$this->_id ."                  and customer_group_id = ". (int)reference::customer($this->_customer_id)->customer_group_id ."                  and (year(start_date) < '1971' or start_date <= '". date('Y-m-d H:i:s') ."')                  and (year(end_date) < '1971' or end_date >= '". date('Y-m-d H:i:s') ."')                  order by id desc                  limit 1;"                );                while ($customer_group_price = database::fetch($product_customer_group_prices_query)) {                  if (isset($customer_group_price[$this->_currency_code]) && $customer_group_price[$this->_currency_code] != 0) {                    $this->_data['price'] = currency::convert($customer_group_price[$this->_currency_code], $this->_currency_code, settings::get('store_currency_code'));                  } else {                    $this->_data['price'] = $customer_group_price[settings::get('store_currency_code')];                }            }        }    }                else if (!empty(customer::$data['id']== 4640) && (!empty(reference::product($this->_id)->no_customer_group_prices))) {                $product_customer_group_prices_query = database::query(                  "select * from ". DB_TABLE_PRODUCTS_PRICES_BY_CUSTOMER_GROUP ."                  where product_id = ". (int)$this->_id ."                  and customer_group_id = ". (int)reference::customer($this->_customer_id)->customer_group_id ."                  and (year(start_date) < '1971' or start_date <= '". date('Y-m-d H:i:s') ."')                  and (year(end_date) < '1971' or end_date >= '". date('Y-m-d H:i:s') ."')                  order by id desc                  limit 1;"                );                while ($customer_group_price = database::fetch($product_customer_group_prices_query)) {                  if (isset($customer_group_price[$this->_currency_code]) && $customer_group_price[$this->_currency_code] != 0) {                    $this->_data['price'] = currency::convert($customer_group_price[$this->_currency_code], $this->_currency_code, settings::get('store_currency_code'));                  } else {                    $this->_data['price'] = $customer_group_price[settings::get('store_currency_code')];                }            }        }                                    ]]></add>    </operation>        <operation error="log">      <search position="after"><![CDATA[            case 'campaign':      ]]></search>      <add><![CDATA[            if (((!empty(customer::$data['code']) && (!empty(reference::product($this->_id)->sign_in_deal)))) || ((!empty(customer::$data['code']) && (!empty(reference::product($this->_id)->signin)))))   {            $this->_data['campaign'] = array();error_log(reference::product($this->_id)->sign_in_deal);            break;            }      ]]></add>    </operation>        </file>    </modification><!--$('#customer-group-prices').on('click', '.remove', function(e) {    e.preventDefault();    $(this).closest('tr').remove();  });  $('#customer-group-prices').on('click', '.delete', function(e) {    e.preventDefault();    $('#customer-group-prices tbody input[name^="customer_group_prices"]').attr('value','');    $('#customer-group-prices tbody select[name^="customer_group_prices"]==1').prop('selectedIndex', 0).selectmenu('refresh', true);;  });$('#customer-group-prices').on('click', '.hide_show', function(e) {    e.preventDefault();    $('#customer-group-prices tbody tr').toggle();});      if (!empty(customer::$data['code']) && (empty(reference::product($product_id)->signin))) var_dump("Ssssssssssssssssss!");return;if (!empty($this->_customer_id) && (empty(customer::$data['code'])) && empty($this->_data['campaign']['price'])) {-->